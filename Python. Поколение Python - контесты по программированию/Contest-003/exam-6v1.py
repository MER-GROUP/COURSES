'''
Одинаковые суммы
Напишите программу, которая проверяет, возможно ли разбить данный набор чисел на два непустых набора с одинаковой суммой.

Формат входных данных
На вход программе последовательность натуральных чисел, разделенных пробелом, которые представляют исходный набор. Количество чисел в последовательности не превышает 10000.

Формат выходных данных
Программа должна вывести True, если введенный набор чисел возможно разбить на два непустых набора с одинаковой суммой, или False в противном случае.

Примечание 1. При разбиении должны быть использованы все числа исходного набора.

Примечание 2. Рассмотрим первый тест. Имеем следующий исходный набор чисел:
1,2,3,4,6

Данный набор можно разбить на два следующих набора:
1,3,4 и 2,6

Оба набора имеют одинаковую сумму, равную 8.

Примечание 3. Тестовые данные доступны по ссылке.
https://stepik.org/media/attachments/lesson/718107/tests_3019844.zip

Sample Input 1:
1 2 3 4 6
Sample Output 1:
True

Sample Input 2:
4 6
Sample Output 2:
False

Sample Input 3:
4 2 5 2 7 3 9 3 6 2 3 43 1 44 123 1
Sample Output 3:
True
'''
# Решение
import itertools as it

arr = [10, 20, 30]
arr = [1, 2, 3, 4, 6]
arr = [5, 8, 9]
arr = [4, 2, 5, 2, 7, 3, 9, 3, 6, 2, 3, 43, 1, 44, 123, 1]
arr = [1, 7, 4, 5, 9, 9, 6, 8, 8, 6] # logn time
arr = [5, 4, 3, 2, 2, 2, 2]
# arr = [1, 1, 10, 10, 100, 100, 1000, 1000]
# arr = [10, 8, 5, 3, 3, 3]
# arr = [20, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2]
# arr = [9, 7, 1, 7, 4, 7, 6, 4, 3, 6]
# arr = [1, 0, 7, 9, 7, 9, 2, 7, 2, 9, 8, 3, 1, 3, 3, 5, 2, 6, 9] # very logn time

for el in it.permutations(arr):
    # print(el)
    i = 1
    check = False
    for _ in el:
        print(el[ : i])
        print(el[i : ])
        x = sum(el[ : i])
        y = sum(el[i : ])
        print('x =', x)
        print('y =', y)
        if (x == y):
            check = True
            print('True')
            break
        i += 1
    if check: break    
else:
    print('False')