class Algo:
	def __init__(self, s):
		print(self.__algo(s))
		
	def __algo(self, s):
		'''
		От обратного- проверяем "А вдруг это не палиндром"? 
		Вначале, конечно же, избавляемся от небуквенных символов.
		Далее рассуждаем следующим образом:
		если ни первая буква не совпадает с последней, 
		ни вторая (следующая за ней).  аналогично в обратном 
		направлении - если  последняя буква не совпадает  с первой,  
		и предпоследняя тоже не совпадает с первой 
		(предположим что удалили последнюю) - то это точно НЕ палиндром, 
		можно прекращать проверку.
		Двигаем счётчик на следующую позицию, и повторяем. 
		В итоге нам либо встретится такая комбинация "Не ПочтиПалиндром", 
		либо не встретится - и тогда это, как ни странно, всё-таки ПочтиПалиндром.
		'''
		s = ''.join(filter(str.isalpha, s))
		for i in range(len(s) // 2):
			if s[i] != s[-1 - i] and s[i + 1] != s[-i - 1] and s[i] != s[-i - 2]:
				return False
		return True

	def __algo2(self, s):
		s = ''.join([x for x in s if x.isalpha()])
		while s != '':
			if s[0] == s[-1]:
				s = s[1:-1]
			else:
				a = s[:-1]
				b = s[1:]
				if a == a[::-1] or b == b[::-1]:
					return True
				else:
					return False
		else:
			return True
		
if __name__ == '__main__':
	Algo(input())
	# 14&*@(a)!(@14112)!@$)!@*$!*a)$*099 
	# True