'''
–®–∞—Ö–º–∞—Ç—ã –±—ã–ª–∏ –ª—É—á—à–µ üå∂Ô∏è
–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –∞—Ä—Ö–∏–≤ data.zip, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã. 
–°—Ä–µ–¥–∏ –Ω–∏—Ö –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ JSON —Ñ–∞–π–ª–æ–≤, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç 
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∫–æ–º-–ª–∏–±–æ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–µ:

{
   "first_name": "Gary",
   "last_name": "Cahill",
   "team": "Chelsea",
   "position": "Defender"
}

–£ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–∞ –∏–º–µ—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã: 

first_name ‚Äî –∏–º—è
last_name ‚Äî —Ñ–∞–º–∏–ª–∏—è
team ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –∫–ª—É–±–∞
position ‚Äî –∏–≥—Ä–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ JSON —Ñ–∞–π–ª—ã 
–∏ –≤—ã–≤–æ–¥–∏—Ç –∏–º–µ–Ω–∞ –∏ —Ñ–∞–º–∏–ª–∏–∏ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤, –≤—ã—Å—Ç—É–ø–∞—é—â–∏—Ö –∑–∞ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–π –∫–ª—É–± Arsenal. 
–§—É—Ç–±–æ–ª–∏—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–º–µ–Ω, 
–∞ –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ ‚Äî –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ —Ñ–∞–º–∏–ª–∏–π, –∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –Ω–∞–ª–∏—á–∏–µ —É —Ñ–∞–π–ª–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è .json –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, 
—á—Ç–æ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ñ–∞–π–ª–æ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON. –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, 
—è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ñ–∞–π–ª–æ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å 
–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π try-except –∏ —Ñ—É–Ω–∫—Ü–∏–µ–π is_correct_json() –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —É—Ä–æ–∫–∞.
https://stepik.org/lesson/623073/step/5?unit=618703

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ù–∞—á–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:

Alex Iwobi
Alexis Sanchez
...

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –£–∫–∞–∑–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ. –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞—á—É –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ.
https://stepik.org/media/attachments/lesson/547172/data.zip
https://stepik.org/media/attachments/lesson/547172/clue_json.txt
'''
from zipfile import ZipFile
import json
from os import remove, rmdir
from os.path import basename, dirname, exists, getsize
from shutil import rmtree
from operator import itemgetter

# with ZipFile(file='047-data.zip', mode='r') as zip_opener:
with ZipFile(file='data.zip', mode='r') as zip_opener:
    files_list_zip = zip_opener.infolist()
    list_dicts = list()
    dir_lists = list()
    # zip_opener.printdir() # test

    for file in files_list_zip:
        if file.is_dir():
            dir_lists.append(file.filename)
        else:
            try:
                if file.filename.endswith('.json'):
                    filename_in_zip = file.filename
                    filename = basename(file.filename)
                    zip_opener.extract(filename_in_zip, dirname(__file__))             

                    with zip_opener.open(name=filename_in_zip, mode='r') as zip_file,\
                        open(file=filename, mode='wb') as json_file:
                        json_file.write(zip_file.read())
                        json_file.close()

                        with open(file=filename, mode='rt', encoding='utf-8', newline='') as file_opener:
                            try:
                                json_dict = json.load(fp=file_opener)
                            except UnicodeDecodeError:
                                pass

                        list_dicts.append(json_dict)                   
                        if exists(filename):
                            remove(filename)
                        if exists(filename_in_zip):
                            remove(filename_in_zip)
            except json.decoder.JSONDecodeError:
                pass

    # [print(dir) for dir in dir_lists] # test
    for dir in dir_lists:
        if exists(dir):
            if getsize(dir):
                rmtree(dir)
            else:
                rmdir(dir)
            

    # [print(l) for l in list_dicts] # test
    [print(d['first_name'], d['last_name']) for d in list(
        filter(
            lambda x: 'Arsenal' == x['team'],
            sorted(
                list_dicts,
                key=itemgetter('first_name', 'last_name') # or
                # key=lambda x: (x['first_name'], x['last_name']) # or
            )
        )
    )]