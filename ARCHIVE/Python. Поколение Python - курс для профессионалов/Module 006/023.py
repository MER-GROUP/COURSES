'''
–í –ø–æ–∏—Å–∫–∞—Ö —Å–ª–æ–≤ 2 üòã
–î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç 
–Ω–∞–∏–º–µ–Ω–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. 
–ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –≤—Å–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–º–µ–Ω–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Å–ª–æ–≤–æ 
–≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ. 
–ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –≤—Å–µ –≤ 
–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ, —Ä–∞–∑–¥–µ–ª—è—è –∑–∞–ø—è—Ç–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä. –¢–æ –µ—Å—Ç—å, 
–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–æ–≤–∞ Python –∏ python —Å—á–∏—Ç–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
https://stepik.org/media/attachments/lesson/635441/tests_2609423.zip
GitHub
https://github.com/python-generation/Professional/tree/main/Module_6/Module_6.8/Module_6.8.13

Sample Input 1:
–ê—Ä–±—É–∑ –ú–∞–ª–∏–Ω–∞ –ú–∞–ª–∏–Ω–∞ –ê—Ä–±—É–∑ –ö–ª—É–±–Ω–∏–∫–∞ –∞—Ä–±—É–∑ –±–∞–Ω–∞–Ω –º–∞–ª–∏–Ω–∞ –≤–∏—à–Ω—è —á–µ—Ä–µ—à–Ω—è –≤–∏—à–Ω—è –∞—Ä–±—É–ó
Sample Output 1:
–±–∞–Ω–∞–Ω, –∫–ª—É–±–Ω–∏–∫–∞, —á–µ—Ä–µ—à–Ω—è

Sample Input 2:
–∞—Ä–±—É–∑ –ú–∞–ª–∏–Ω–ê –∫–ª—É–±–Ω–∏–∫–∞ –ë–∞–Ω–∞–Ω –í–∏—à–Ω—è –ß–µ—Ä–µ—à–Ω—è
Sample Output 2:
–∞—Ä–±—É–∑, –±–∞–Ω–∞–Ω, –≤–∏—à–Ω—è, –∫–ª—É–±–Ω–∏–∫–∞, –º–∞–ª–∏–Ω–∞, —á–µ—Ä–µ—à–Ω—è

Sample Input 3:
–∞—Ä–±—É–∑ —á–µ—Ä–µ—à–Ω—è –º–∞–ª–∏–Ω–∞ –º–∞–ª–∏–Ω–∞ –∞—Ä–±—É–∑ –∞—Ä–±—É–∑ –ë–∞–Ω–∞–Ω –º–∞–ª–∏–Ω–∞ –≤–∏—à–Ω—è —á–µ—Ä–µ—à–Ω—è –≤–∏—à–Ω—è –∞—Ä–±—É–∑
Sample Output 3:
–±–∞–Ω–∞–Ω
'''
from collections import Counter

_count = tuple(reversed(Counter(input().lower().split()).most_common()))
# print(_count) # test
n_min = _count[0][1]
res = list()
[res.append(k) for k, v in sorted(_count, key=lambda x: (x[1], x[0])) if v == n_min]
print(', '.join(res))