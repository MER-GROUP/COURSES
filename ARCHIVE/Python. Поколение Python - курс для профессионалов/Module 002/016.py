'''
Максимальная группа
Назовем набор различных натуральных чисел группой. 
Например: (13, 4, 22, 40). Тогда длиной группы будем считать 
количество чисел в группе. Например, длина группы (13, 4, 22, 40) равна 4.

Дана последовательность натуральных чисел от 1 до n включительно. 
Напишите программу, которая группирует все числа данной последовательности 
по сумме их цифр и определяет длину группы, содержащей наибольшее количество чисел.

Формат входных данных
На вход программе подается натуральное число n.

Формат выходных данных
Программа должна сгруппировать все числа из натуральной 
последовательности от 1 до n по сумме их цифр и определить 
длину группы, содержащей наибольшее количество чисел.

Примечание 1. Рассмотрим третий тест, в котором n=20. 
Запишем последовательность чисел от 1 до 20:
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
Сгруппируем полученные числа по сумме их цифр:
(1,10), (2,11, 20), (3,12), (4,13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (19)
Итак, длина группы с наибольшим количеством чисел равна 3.

Примечание 2. Тестовые данные доступны по ссылке.
https://stepik.org/media/attachments/lesson/569749/tests_2959799.zip

Sample Input 1:
13
Sample Output 1:
2

Sample Input 2:
2
Sample Output 2:
1

Sample Input 3:
20
Sample Output 3:
3
'''

"""
Посчитать сумму цифр каждого числа, потом подсчитать 
количество повторений сумм цифр и вывести максимальное.

Мы рассмотрели числа от 1 до 20, числа 2, 11 и 20 попали 
в одну группу, так как имеют одну и ту же сумму цифр, равную 2
"""
def max_group(n: int) -> int:
    arr = list(range(1, n + 1))
    dictionary = dict()
    for i in arr:
        for j in arr:
            dictionary[i] = dictionary.get(i, 0) + 1\
                            if\
                                (i == sum(map(int, str(j))))\
                            else\
                                dictionary.get(i, 0) + 0 
    return max(dictionary.values())
    
if __name__ == '__main__':
    print(max_group(int(input())))