'''
–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ üòÑ
–î–∞–Ω —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω—ã –∏—Ö —Ñ–∞–º–∏–ª–∏–∏, 
–∏–º–µ–Ω–∞ –∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç 
—Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ 
n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. 
–í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö n —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ: 
–∏–º—è, —Ñ–∞–º–∏–ª–∏—è –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º. 
–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏ 
–≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é, —Ä–∞–∑–¥–µ–ª–∏–≤ –ø—Ä–æ–±–µ–ª–æ–º. 
–ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö 
–¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ä–∞–∑–¥–µ–ª–∏–≤ –ø—Ä–æ–±–µ–ª–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–µ.
https://stepik.org/media/attachments/lesson/571244/tests_2506827.zip

Sample Input 1:
3
–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ 01.05.1995
–ü–µ—Ç—Ä –°–µ—Ä–≥–µ–µ–≤ 29.04.1995
–°–µ—Ä–≥–µ–π –ò–≤–∞–Ω–æ–≤ 01.01.1996
Sample Output 1:
29.04.1995 –ü–µ—Ç—Ä –°–µ—Ä–≥–µ–µ–≤

Sample Input 2:
3
–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ 01.05.1995
–ü–µ—Ç—Ä –°–µ—Ä–≥–µ–µ–≤ 29.05.1995
–°–µ—Ä–≥–µ–π –ò–≤–∞–Ω–æ–≤ 01.05.1995
Sample Output 2:
01.05.1995 2
'''
from datetime import datetime

count_staff = int(input())
data_base = list()
pattern = '%d.%m.%Y'
for _ in range(count_staff):
    data_base.append(
        tuple(
            map(
                lambda x: datetime.strptime(x, pattern) if x[0].isdigit() else x,
                input().split()
            )
        )
    )

min_date = min(data_base, key=lambda x: x[2])
count_min_date = sum(1 for i in data_base if min_date[2] == i[2])

if 1 == count_min_date:
    print(f'{min_date[-1].strftime(pattern)} {min_date[0]} {min_date[1]}')
else:
    print(f'{min_date[-1].strftime(pattern)} {count_min_date}')