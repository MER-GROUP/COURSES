'''
Сортировка IP-адресов
IP-адрес – уникальный числовой идентификатор устройства в компьютерной сети, 
работающий по протоколу TCP/IP.

В 44-й версии IP-адрес представляет собой 32-битное число. 
Адрес записывается в виде четырёх десятичных чисел (октетов) 
со значением от 0 до 255, разделённых точками, например, 192.168.1.2

Напишите программу, которая считывает IP-адреса и выводит 
их в порядке возрастания в соответствии с десятичным представлением.

Формат входных данных
На вход программе подается число n (n≥1) – количество IP-адресов. 
Затем n строк с корректными IP-адресами.

Формат выходных данных
Программа должна вывести IP-адреса в порядке возрастания 
в соответствии с десятичным представлением.

Примечание 1. Чтобы перевести IP-адрес 192.168.1.2 в 
десятичное число мы используем формулу:

192 x 256^3 + 168 x 256^2 + 1 x 256^1 + 2 x 256^0 = 3232235778

Примечание 2. Используйте необязательный аргумент key.

Тестовые данные
Sample Input:
9
128.199.44.24
128.199.201.245
143.198.168.95
172.67.181.62
172.67.222.111
172.67.10.90
45.8.106.59
203.13.32.156
172.67.181.194

Sample Output:
45.8.106.59
128.199.44.24
128.199.201.245
143.198.168.95
172.67.10.90
172.67.181.62
172.67.181.194
172.67.222.111
203.13.32.156
'''
# Решение
from functools import reduce

arr = [input() for _ in range(int(input()))]
# print(arr)
print(
    *sorted(
        arr,
        key=lambda x: reduce(
            lambda x, y: x + y,
            map(
                lambda x, y, n: x * y**n,
                map(int, x.split('.')),
                [256] * 4,
                range(3, -1, -1)
            )
        )
    ),
    sep='\n'
)