# –§—É–Ω–∫—Ü–∏–∏
print('---------------------------------')
num = 17
numbers = [1, 2, 3]
colors = (1, 2, 3)
name = 'Python'

print(type(num))
print(type(numbers))
print(type(colors))
print(type(name))
print('---------------------------------')
print(type(print))
print(type(sum))
print(type(abs))
print('---------------------------------')
def hello():
    print('Hello from function')

print(type(hello))
print('---------------------------------')
def hello():
    print('Hello from function')
# –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π func —Ñ—É–Ω–∫—Ü–∏—é hello
func = hello  
# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é   
func()           
print('---------------------------------')
# –∫–∞–∫ –≤ —è–∑—ã–∫–µ Pascal üòÄ
writeln = print            

writeln('Hello world!')
writeln('Python')
print('---------------------------------')
numbers = [10, -7, 8, -100, -50, 32, 87, 117, -210]

print(max(numbers))
print(min(numbers))
print(sorted(numbers))
print('---------------------------------')
# –ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤—ã—à–µ—Å–∫–∞–∑–∞–Ω–Ω–æ–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∫–æ–¥–∞:
numbers = [10, -7, 8, -100, -50, 32, 87, 117, -210]
#  —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é abs –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞
print(max(numbers, key=abs))  
#  —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é abs –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞      
print(min(numbers, key=abs))  
#  —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é abs –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞      
print(sorted(numbers, key=abs))   
print('---------------------------------')
# –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:
points = [(1, -1), (2, 3), (-10, 15), (10, 9), (7, 18), (1, 5), (2, -4)]
#  —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫ –Ω–∞ –º–µ—Å—Ç–µ
points.sort()    
print(points)
print('---------------------------------')
def compare_by_second(point):
    return point[1]

def compare_by_sum(point):
    return point[0] + point[1]

points = [(1, -1), (2, 3), (-10, 15), (10, 9), (7, 18), (1, 5), (2, -4)]
# —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ç–æ—Ä–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –∫–æ—Ä—Ç–µ–∂–∞
print(sorted(points, key=compare_by_second))   
# —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å—É–º–º–µ –∫–æ—Ä—Ç–µ–∂–∞
print(sorted(points, key=compare_by_sum))  
print('---------------------------------')
def generator():
    def hello():
        print('Hello from function!')
    return hello

func = generator()
func()
print('---------------------------------')
def generator_square_polynom(a, b, c):
    def square_polynom(x):
        return a*x**2 + b*x + c
    return square_polynom
# –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:
f = generator_square_polynom(a=1, b=2, c=1)
g = generator_square_polynom(a=2, b=0, c=-3)
h = generator_square_polynom(a=-3, b=-10, c=50)

print(f(1))
print(g(2))
print(h(-1))
print('---------------------------------')
def comparator(item):
    return item[0]

data = [('red', 1), ('blue', 2), ('green', 5), ('blue', 1)]
# —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—é
data.sort(key=comparator)   

print(data)

data = [('5', 4), ('5', 2), ('7', 5), ('7', 1)]
# —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—é
data.sort(key=comparator)   

print(data)

data = [(5, 4), (5, 2), (7, 5), (7, 1)]
# —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—é
data.sort(key=comparator)   

print(data)

data = [(5, 4), (5, 2), (7, 5), (7, 1)]
# —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—é
data.sort()   

print(data)
print('---------------------------------')
print(input)
print(comparator)
print('---------------------------------')
for e in __builtins__.__dict__:
    print(e)
print('---------------------------------')