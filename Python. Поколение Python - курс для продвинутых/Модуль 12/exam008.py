'''
–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç—ã üå∂Ô∏è
–ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–ø–∏—Å—ã–≤–∞—Ç—å 
–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. 
–ß–∞—Å—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫, 
–∞ –ø–æ—Ç–æ–º –∏ –≤–æ–≤—Å–µ –∑–∞–±—ã–≤–∞—é—Ç –æ –Ω–∏—Ö üòÇ.

–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –∏–º–µ–Ω–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞, 
–≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—Å–∞–Ω –∫–æ–¥ –Ω–∞ —è–∑—ã–∫–µ Python. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, 
–≤—ã–≤–æ–¥—è—â—É—é –Ω–∞ —ç–∫—Ä–∞–Ω –∏–º–µ–Ω–∞ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç 
–ø–æ—è—Å–Ω—è—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ë—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –ª—é–±–∞—è —Å—Ç—Ä–æ–∫–∞, 
–Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å–æ —Å–ª–æ–≤–∞ def –∏ –ø—Ä–æ–±–µ–ª–∞, —è–≤–ª—è–µ—Ç—Å—è –Ω–∞—á–∞–ª–æ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏. 
–§—É–Ω–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ - #.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –∏–º—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ 
—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –∫–æ–¥–æ–º –Ω–∞ —è–∑—ã–∫–µ Python.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π (–Ω–µ –º–µ–Ω—è—è –ø–æ—Ä—è–¥–∫–∞ –∏—Ö 
—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ), –∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, 
–¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—è—Å–Ω—è—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ï—Å–ª–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
–≤ —Ñ–∞–π–ª–µ –∏–º–µ—é—Ç –ø–æ—è—Å–Ω—è—é—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç–æ —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏: Best Programming Team.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ –±—ã —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∞–ª –∫–æ–¥:

def powers(a):
    return a, a**2, a**3

# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª
def sum_all(*args):
    return sum(args)

def matrix():
    pass

# —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
def count_args(*args):
    return len(args)

def mean(*args):
    total = 0.0
    count = 0  
    for i in args:
        if type(i) in (int, float):
            total += i
            count += 1
    if count == 0:
        return 0.0
    else:
        return total / count
    
def greet(name, *args):
    args = (name,) + args
    return f'Hello, {" and ".join(args)}!'

# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞
def fact(n):
    res = 1
    for i in range(1, n + 1):
        res *= i
    return res

—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –±—É–¥–µ—Ç:

powers
matrix
mean
greet
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤ —Ñ–∞–π–ª–µ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è 
–ø—Ä–∏ —ç—Ç–æ–º –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ —Ñ–∞–π–ª–µ –Ω–µ—Ç. 
'''
# –†–µ—à–µ–Ω–∏–µ
# with open(input(), 'rt', encoding='utf-8') as file_in:
with open('test007.txt', 'rt', encoding='utf-8') as file_in:
    code = list(file_in)
    print(code.)