'''
Булочный магнат
После ухода сети Макдональдс из России Тимур решил открыть свою небольшую бургерную. 
Цена каждого бургера в его ресторане определяется количеством ингредиентов, 
которые выбирает сам посетитель. Вам доступны словари, в которых в качестве ключа 
указано название ингредиента, а в качестве значения — его цена. Все ингредиенты 
разбиты по категориям, например, овощи содержатся в одном словаре, соусы — в другом.

Напишите программу, которая принимает на вход ингредиенты, выбранные посетителем, 
и определяет их общую стоимость.

Формат входных данных
На вход программе подается последовательность ингредиентов, разделенных запятой без пробелов.

Формат выходных данных
Программа должна определить общую стоимость введенных ингредиентов и вывести полученный 
результат в виде чека, в котором указаны ингредиенты в лексикографическом порядке, 
количество каждых и их общая стоимость, в следующем формате:

<ингредиент 1> x <количество 1>
<ингредиент 2> x <количество 2>
...
-------------------------------
ИТОГ: <общая стоимость>р

Примечание 1. Программа должна добавлять нужное количество пробелов, 
если один ингредиент имеет меньшую длину, чем другие.

Примечание 2. Длина пунктирной линии должна равняться длине самой длинной строки в чеке, 
включая строку с итоговой стоимостью.

Примечание 3. Гарантируется, что все ингредиенты, выбранные посетителем, 
присутствуют в словарях.

Примечание 4. Тестовые данные доступны по ссылкам:

Архив с тестами
https://stepik.org/media/attachments/lesson/634670/tests_3094419.zip
GitHub
https://github.com/python-generation/Professional/tree/main/Module_6/Module_6.9/Module_6.9.23

from collections import ChainMap        

bread = {'булочка с кунжутом': 15, 'обычная булочка': 10, 'ржаная булочка': 15}
meat = {'куриный бифштекс': 50, 'говяжий бифштекс': 70, 'рыбный бифштекс': 40}
sauce = {'сливочно-чесночный': 15, 'кетчуп': 10, 'горчица': 10, 'барбекю': 15, 'чили': 15}
vegetables = {'лук': 10, 'салат': 15, 'помидор': 15, 'огурцы': 10}
toppings = {'сыр': 25, 'яйцо': 15, 'бекон': 30}

Sample Input 1:
ржаная булочка,ржаная булочка,говяжий бифштекс,сыр,сыр,салат,барбекю,помидор
Sample Output 1:
барбекю          x 1
говяжий бифштекс x 1
помидор          x 1
ржаная булочка   x 2
салат            x 1
сыр              x 2
--------------------
ИТОГ: 195р

Sample Input 2:
сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр,сыр
Sample Output 2:
сыр x 15
----------
ИТОГ: 375р
'''
from collections import ChainMap, Counter        

bread = {'булочка с кунжутом': 15, 'обычная булочка': 10, 'ржаная булочка': 15}
meat = {'куриный бифштекс': 50, 'говяжий бифштекс': 70, 'рыбный бифштекс': 40}
sauce = {'сливочно-чесночный': 15, 'кетчуп': 10, 'горчица': 10, 'барбекю': 15, 'чили': 15}
vegetables = {'лук': 10, 'салат': 15, 'помидор': 15, 'огурцы': 10}
toppings = {'сыр': 25, 'яйцо': 15, 'бекон': 30}

_counter = Counter(input().split(','))
_chainmap = ChainMap(bread, meat, sauce, vegetables, toppings)
_sum = int()
# print(_counter) # test
# print(_chainmap) # test

for k, v in _counter.most_common():
    if k in _chainmap:
        _sum += _chainmap[k] * v
# print(_sum) # test

_len_max_word = len(max(_counter, key=len))
_len_max_separator_1 = len(max(_counter, key=len) + ' x ' + f'{max(_counter.values())}')
_len_max_separator_2 = len(f'ИТОГ: {_sum}р')
_len_max_separator = (_len_max_separator_1, _len_max_separator_2)[_len_max_separator_2 >= _len_max_separator_1]
# print(_len_max_word) # test
# print(_len_max_separator_1) # test
# print(_len_max_separator_2) # test
# print(_len_max_separator) # test

for k, v in sorted(_counter.most_common()):
    print(f'{k:{_len_max_word}} x {v}')
print('-' * _len_max_separator)
print(f'ИТОГ: {_sum}р')