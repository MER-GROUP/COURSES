'''
–ò—Ç–µ—Ä–∞—Ç–æ—Ä Alphabet üå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Alphabet, –ø–æ—Ä–æ–∂–¥–∞—é—â–∏–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

language ‚Äî –∫–æ–¥ —è–∑—ã–∫–∞: ru ‚Äî —Ä—É—Å—Å–∫–∏–π, en ‚Äî –∞–Ω–≥–ª–∏–π—Å–∫–∏–π

–ò—Ç–µ—Ä–∞—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ Alphabet() –¥–æ–ª–∂–µ–Ω —Ü–∏–∫–ª–∏—á–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤:

—Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞, –µ—Å–ª–∏ language –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ ru
–∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞, –µ—Å–ª–∏ language –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ en

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ë—É–∫–≤–∞ —ë –≤ —Ä—É—Å—Å–∫–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–µ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–ª–∞—Å—Å Alphabet.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:

–ê—Ä—Ö–∏–≤ —Å —Ç–µ—Å—Ç–∞–º–∏
https://stepik.org/media/attachments/lesson/669733/tests_2778511.zip
GitHub
https://github.com/python-generation/Professional/tree/main/Module_10/Module_10.4/Module_10.4.16

Sample Input 1:
ru_alpha = Alphabet('ru')
print(next(ru_alpha))
print(next(ru_alpha))
print(next(ru_alpha))
Sample Output 1:
–∞
–±
–≤

Sample Input 2:
en_alpha = Alphabet('en')
letters = [next(en_alpha) for _ in range(28)]
print(*letters)
Sample Output 2:
a b c d e f g h i j k l m n o p q r s t u v w x y z a b
'''
pass

if __name__ == '__main__':
    pass