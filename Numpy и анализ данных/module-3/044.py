'''
"Мир, основанный на функциях и функции astype, concatenate и resize"

В далеком будущем, в 3033 году, мир, основанный на функциях, был охвачен катастрофой, 
которая привела к разделению его жителей на две группы: тех, у кого массивы имеют 
тип данных float, и тех, у кого массивы имеют тип данных int. Жители понимают, 
что для спасения мира им необходимо объединить свои массивы в один массив, 
но они сталкиваются с проблемой разных типов данных. Помогите жителям объединить 
свои массивы, используя функции astype и concatenate, а затем изменить размеры 
нового массива, используя функцию resize, чтобы гарантировать, что его размер 
не превышает определенный предел.

На вход поступают три строки. В первой и второй строках - числа (действительные или целые), 
разделенные пробелом. Необходимо на их основе создать два numpy массива a и b. 
В третьей строке целое число n - размер итогового массива. Необходимо объединить 
массивы a и b, привести тип элементов получившегося массива к типу элементов 
первого массива а и привести размер получившегося массива к n. 
Вывести итоговый массив на экран. 

Sample Input:
1.215 9.697 8.638 0.993 3.427 0.361 5.868 7.974 9.691 9.685 0.79 1.847
4 5 
23
Sample Output:
[1.215 9.697 8.638 0.993 3.427 0.361 5.868 7.974 9.691 9.685 0.79  1.847
 4.    5.    1.215 9.697 8.638 0.993 3.427 0.361 5.868 7.974 9.691]
'''
import numpy as np

if __name__ == '__main__':
    f = lambda x: (int, float)['.' in "".join(x)]
    _a = input().split()
    _b = input().split()
    a = np.array(object=_a, dtype=f(_a))
    b = np.array(object=_b, dtype=f(_b))
    n = int(input())
    c = np.concatenate((a, b)).astype(a.dtype)
    d = np.resize(a=c, new_shape=n)
    print(d)