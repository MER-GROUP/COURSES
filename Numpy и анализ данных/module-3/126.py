'''
Волшебник numpy и задача о парах элементов

Жили-были в далеком царстве два волшебных массива a и b, которые были спрятаны глубоко в лесу. 
Их хранительницей была красавица-принцесса, которая бережно хранила эти массивы.

Однажды к принцессе пришел волшебник numpy и попросил ее дать ему массивы, 
чтобы он мог решить одну задачу. Задача заключалась в том, чтобы найти все 
пары элементов x и y из массивов a и b соответственно, такие что |x - y| 
меньше заданного порога threshold.

Принцесса была очень любезна и дала волшебнику массивы a и b. Волшебник 
numpy начал свои магические манипуляции. И в конце концов получил все пары 
элементов x и y из массивов a и b, которые удовлетворяли заданному условию.

Принцесса была поражена мудростью волшебника numpy и с благодарностью отдала 
ему массивы. Так закончилась их волшебная встреча, и они жили долго и счастливо. 
И вам также нужно решить эту задачу и вернуть все пары таких чисел из обоих 
массивов  в виде строки спиcков, через пробел.

Sample Input 1:
1 2 3 
4 2 7
2
Sample Output 1:
[1 2] [2 2] [3 4] [3 2]

Sample Input 2:
7 8 18 18 6 5 12 10 14 10 13 15 0 7 11 13 14 1 3 2 7 21 32 27
12 21 18 0 9 10 5 2 7 18 3 13 16 4 0 5 11 16 2 17 16 18 21 0
3
Sample Output 2:
[7 9] [7 5] [7 7] [7 5] [8 9] [ 8 10] [8 7] [18 18] [18 18] [18 16] [18 16] [18 17] [18 16] [18 18] [18 18] [18 18] [18 16] [18 16] [18 17] [18 16] [18 18] [6 5] [6 7] [6 4] [6 5] [5 5] [5 7] [5 3] [5 4] [5 5] [12 12] [12 10] [12 13] [12 11] [10 12] [10  9] [10 10] [10 11] [14 12] [14 13] [14 16] [14 16] [14 16] [10 12] [10  9] [10 10] [10 11] [13 12] [13 13] [13 11] [15 13] [15 16] [15 16] [15 17] [15 16] [0 0] [0 2] [0 0] [0 2] [0 0] [7 9] [7 5] [7 7] [7 5] [11 12] [11  9] [11 10] [11 13] [11 11] [13 12] [13 13] [13 11] [14 12] [14 13] [14 16] [14 16] [14 16] [1 0] [1 2] [1 3] [1 0] [1 2] [1 0] [3 5] [3 2] [3 3] [3 4] [3 5] [3 2] [2 0] [2 2] [2 3] [2 4] [2 0] [2 2] [2 0] [7 9] [7 5] [7 7] [7 5] [21 21] [21 21]
'''
import numpy as np
from sys import stdin
stdin = open(file='126.csv', mode='rt', encoding='utf-8', newline='')

if __name__ == '__main__':
#     arr = np.fromstring(
#         string=stdin.read(),
#         # dtype=int,
#         dtype=float,
#         sep = ' '
#     )
#     print(arr) # test #
#     print(type(arr)) # test #

    arr1, arr2, arr3, *_ = (np.fromstring(string=i, dtype=int, sep=' ') for i in stdin)
    print(arr1, arr2, arr3, sep='\n')

    arr_new = []
    print(arr_new)

    for i in arr1:
        for j in arr2:
            if abs(i-j) < arr3[0]:
                arr_new.append([i, j])

    print(*np.array(arr_new, int))